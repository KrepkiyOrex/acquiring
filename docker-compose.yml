services:
  db:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: acquiring
      TZ: Europe/Samara
    networks:
      - acquiring_app_network
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    container_name: kafka_container
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGLEVEL: "ERROR"
    networks:
      - acquiring_app_network
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: zookeeper_container
    ports:
      - "2181:2181"
    networks:
      - acquiring_app_network
    environment:
      ZOOKEEPER_LOG_LEVEL: WARN  # Уменьшает уровень логирования до WARN
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  app:
    build: .
    container_name: acquiring_container
    environment:
      TZ: Europe/Samara
      KAFKA_BROKER: kafka:9093
    env_file:
      - .env
    networks:
      - acquiring_app_network
    depends_on:
      - db
      - kafka
    ports:
      - "8080:8080"
    volumes:
      - ./internal:/internal  # Монтируем папку с хоста в контейнер (без него, не видит файл form.html)

  nginx:
    build:
      context: .
      dockerfile: DockerfileNginx
    container_name: nginx_container
    environment:
      TZ: Europe/Samara
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    networks:
      - acquiring_app_network
    volumes:
      - ./ssl:/etc/nginx/ssl  # Монтируем локальную папку ./ssl в контейнер
      - ./internal/source:/usr/share/nginx/html/source

  consumer-app:
    build:
      context: ../consumer-app
    container_name: consumer_container
    # environment:
      # - DATABASE_URL=postgres://user:password@postgres:5432/transactions_db
      # - KAFKA_BROKER=kafka:9093
    networks:
      - acquiring_app_network
    depends_on:
      - kafka
      # - postgres

networks:
  acquiring_app_network:
    external: true

volumes:
  db_data:
